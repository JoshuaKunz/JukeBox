<Button      x:Class="Jukebox.Shared.Views.SongView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Jukebox.Shared.Views"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             xmlns:vm="clr-namespace:Jukebox.Shared.ViewModels"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:wpfanimated="http://wpfanimatedgif.codeplex.com"
             mc:Ignorable="d"
             Focusable="True"
             Foreground="White"
             Padding="5"
             x:Name="btn"
             d:DataContext="{d:DesignInstance {x:Type vm:SongViewModel}}">

    <Button.InputBindings>
        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding AddToPlaylistCommand}"/>
    </Button.InputBindings>

    <Button.Effect>
        <DropShadowEffect ShadowDepth="5"/>
    </Button.Effect>

    <Button.Style>
        <Style TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <!--I want this type of trigger to switch on/off the storyboard of the Image below-->
                    <Trigger.Setters>
                        <Setter Property="FontWeight"
                                Value="UltraBold"/>
                        <Setter Property="Background"
                                Value="White"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Button.Style>

    <Button.Template>
        <ControlTemplate TargetType="Button">

            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="LostFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <Rotation3DAnimation   Storyboard.TargetName="albumCover"
                                                   Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                   Duration="0:0:1"
                                                   BeginTime="0:0:0">
                                <Rotation3DAnimation.To>
                                    <AxisAngleRotation3D Angle="360"
                                                         Axis="0, 1, 0" />
                                </Rotation3DAnimation.To>
                            </Rotation3DAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <!-- Start the rotation -->
                <EventTrigger RoutedEvent="GotFocus">
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <Rotation3DAnimation   Storyboard.TargetName="albumCover"
                                                   Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                   Duration="0:0:2"
                                                   BeginTime="0:0:0">
                                <Rotation3DAnimation.From>
                                    <AxisAngleRotation3D Angle="0"
                                                         Axis="0, 1, 0" />
                                </Rotation3DAnimation.From>
                                <Rotation3DAnimation.To>
                                    <AxisAngleRotation3D Angle="90"
                                                         Axis="0, 1, 0" />
                                </Rotation3DAnimation.To>
                            </Rotation3DAnimation>

                            <Rotation3DAnimation   Storyboard.TargetName="albumCover"
                                                   Storyboard.TargetProperty="(Viewport2DVisual3D.Transform).(RotateTransform3D.Rotation)"
                                                   Duration="0:0:2"
                                                   BeginTime="0:0:2">
                                <Rotation3DAnimation.From>
                                    <AxisAngleRotation3D Angle="-90"
                                                         Axis="0, 1, 0" />
                                </Rotation3DAnimation.From>
                                <Rotation3DAnimation.To>
                                    <AxisAngleRotation3D Angle="0"
                                                         Axis="0, 1, 0" />
                                </Rotation3DAnimation.To>
                            </Rotation3DAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ControlTemplate.Triggers>

            <Border x:Name="MainBorder"
                    Padding="5"
                    Margin="50 20"
                    Width="auto"
                    Height="auto"
                    Focusable="True">

                <StackPanel>

                    <Grid Width="400"
                          Height="400"
                          Background="Transparent">

                        <Viewport3D>

                            <Viewport3D.Camera>
                                <PerspectiveCamera Position="0, 0, 2.8" FieldOfView="60"/>
                            </Viewport3D.Camera>

                            <Viewport2DVisual3D x:Name="albumCover">

                                <Viewport2DVisual3D.Transform>
                                    <RotateTransform3D>
                                        <RotateTransform3D.Rotation>
                                            <AxisAngleRotation3D Angle="0" Axis="0, 1, 0" />
                                        </RotateTransform3D.Rotation>
                                    </RotateTransform3D>
                                </Viewport2DVisual3D.Transform>

                                <Viewport2DVisual3D.Geometry>
                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0"
                                                    TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                </Viewport2DVisual3D.Geometry>

                                <Viewport2DVisual3D.Material>
                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="Transparent"/>
                                </Viewport2DVisual3D.Material>

                                <!--This Image-->
                                <Image Source="{Binding CoverImage, FallbackValue={StaticResource MetSnakeImageKey}}"/>
                            </Viewport2DVisual3D>

                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <DirectionalLight Color="#fff" Direction="0,0,-1"/>
                                </ModelVisual3D.Content>
                            </ModelVisual3D>
                        </Viewport3D>
                    </Grid>


                    <TextBlock  Margin="0,-82,0,0"
                                Text="{Binding Title, FallbackValue='Add Title'}"
                                HorizontalAlignment="Center"
                                FontSize="20">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="10"/>
                        </TextBlock.Effect>
                    </TextBlock>

                    <TextBlock  Margin="0,-100,0, 0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Text="{Binding Year, FallbackValue='Add Year'}"
                                FontSize="15">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="10"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </StackPanel>
            </Border>

        </ControlTemplate>
    </Button.Template>
</Button>
